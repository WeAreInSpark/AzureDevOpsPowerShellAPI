{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home # Powershell module for API to DevOps services Overview # Automate tasks in Azure DevOps and Azure AD. Works on Windows Linux and MacOS. Installation # Install-Module -Name InSpark . InfrastructureAsCode -Scope CurrentUser -Repository InSpark -Credential $InSparkAzureDevopsArtifacts For more information on how to setup access to our repository, please checkout our guide . The source documentation on installation can also be found here . Basic Usage # List all Azure DevOps projects # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" } Get-AzDoProject @params Create an Azure DevOps Project # New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" Contributing # Contributions are welcome! Open a pull request to fix a bug, or open an issue to discuss a new feature or change.","title":"Home"},{"location":"#home","text":"Powershell module for API to DevOps services","title":"Home"},{"location":"#overview","text":"Automate tasks in Azure DevOps and Azure AD. Works on Windows Linux and MacOS.","title":"Overview"},{"location":"#installation","text":"Install-Module -Name InSpark . InfrastructureAsCode -Scope CurrentUser -Repository InSpark -Credential $InSparkAzureDevopsArtifacts For more information on how to setup access to our repository, please checkout our guide . The source documentation on installation can also be found here .","title":"Installation"},{"location":"#basic-usage","text":"","title":"Basic Usage"},{"location":"#list-all-azure-devops-projects","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" } Get-AzDoProject @params","title":"List all Azure DevOps projects"},{"location":"#create-an-azure-devops-project","text":"New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\"","title":"Create an Azure DevOps Project"},{"location":"#contributing","text":"Contributions are welcome! Open a pull request to fix a bug, or open an issue to discuss a new feature or change.","title":"Contributing"},{"location":"Add-AzDoVariableGroupVariable/","text":"Add-AzDoVariableGroupVariable # SYNOPSIS # This script adds variables to variable groups in a given project. SYNTAX # Add-AzDoVariableGroupVariable [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-VariableGroupName] <String> [-Variables] <Hashtable> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # This script adds variables to variable groups in a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables. EXAMPLES # EXAMPLE 1 # $splat = @{ CollectionUri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' PAT = '*******************' VariableGroupName = @('Group1', 'Group2') Variables = @{ test = @{ value = 'test' } kaas = @{ value = 'kaas' } } } Add-AzDoVariableGroupVariable @splat This example creates a new Variable Group with a variable \"test = test\". EXAMPLE 2 # $splat = @{ CollectionUri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' VariableGroupName = @('Group1', 'Group2') } Get-AzDoVariableGroup @splat | Add-AzDoVariableGroupVariable -Variables @{ test = @{ value = 'test' } } This example creates a few new Variable Groups with a variable \"test = test\". PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -VariableGroupName # Name of the variable group Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Variables # Variable names and values Type : Hashtable Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSObject # NOTES # RELATED LINKS #","title":"Add-AzDoVariableGroupVariable"},{"location":"Add-AzDoVariableGroupVariable/#add-azdovariablegroupvariable","text":"","title":"Add-AzDoVariableGroupVariable"},{"location":"Add-AzDoVariableGroupVariable/#synopsis","text":"This script adds variables to variable groups in a given project.","title":"SYNOPSIS"},{"location":"Add-AzDoVariableGroupVariable/#syntax","text":"Add-AzDoVariableGroupVariable [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-VariableGroupName] <String> [-Variables] <Hashtable> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Add-AzDoVariableGroupVariable/#description","text":"This script adds variables to variable groups in a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables.","title":"DESCRIPTION"},{"location":"Add-AzDoVariableGroupVariable/#examples","text":"","title":"EXAMPLES"},{"location":"Add-AzDoVariableGroupVariable/#example-1","text":"$splat = @{ CollectionUri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' PAT = '*******************' VariableGroupName = @('Group1', 'Group2') Variables = @{ test = @{ value = 'test' } kaas = @{ value = 'kaas' } } } Add-AzDoVariableGroupVariable @splat This example creates a new Variable Group with a variable \"test = test\".","title":"EXAMPLE 1"},{"location":"Add-AzDoVariableGroupVariable/#example-2","text":"$splat = @{ CollectionUri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' VariableGroupName = @('Group1', 'Group2') } Get-AzDoVariableGroup @splat | Add-AzDoVariableGroupVariable -Variables @{ test = @{ value = 'test' } } This example creates a few new Variable Groups with a variable \"test = test\".","title":"EXAMPLE 2"},{"location":"Add-AzDoVariableGroupVariable/#parameters","text":"","title":"PARAMETERS"},{"location":"Add-AzDoVariableGroupVariable/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Add-AzDoVariableGroupVariable/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Add-AzDoVariableGroupVariable/#-projectname","text":"Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Add-AzDoVariableGroupVariable/#-variablegroupname","text":"Name of the variable group Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-VariableGroupName"},{"location":"Add-AzDoVariableGroupVariable/#-variables","text":"Variable names and values Type : Hashtable Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Variables"},{"location":"Add-AzDoVariableGroupVariable/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Add-AzDoVariableGroupVariable/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Add-AzDoVariableGroupVariable/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Add-AzDoVariableGroupVariable/#inputs","text":"","title":"INPUTS"},{"location":"Add-AzDoVariableGroupVariable/#outputs","text":"","title":"OUTPUTS"},{"location":"Add-AzDoVariableGroupVariable/#psobject","text":"","title":"PSObject"},{"location":"Add-AzDoVariableGroupVariable/#notes","text":"","title":"NOTES"},{"location":"Add-AzDoVariableGroupVariable/#related-links","text":"","title":"RELATED LINKS"},{"location":"Add-FilesToRepo/","text":"Add-FilesToRepo # SYNOPSIS # Upload path to a repo in Azure DevOps. SYNTAX # Add-FilesToRepo [-CollectionUri] <String> [[-PAT] <String>] [-RepoName] <String> [-ProjectName] <String> [-Path] <String> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Upload path to a repo in Azure DevOps. EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoRepo @params This example creates a new Azure DevOps repo with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' 'test', 'test2' | New-AzDoRepo -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" This example creates a new Azure DevOps repo for each in pipeline PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the new repository Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Path # Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $res.name # RepoId = $res.id # RepoURL = $res.url # WebUrl = $res.webUrl # HttpsUrl = $res.remoteUrl # SshUrl = $res.sshUrl # } # NOTES # RELATED LINKS #","title":"Add-FilesToRepo"},{"location":"Add-FilesToRepo/#add-filestorepo","text":"","title":"Add-FilesToRepo"},{"location":"Add-FilesToRepo/#synopsis","text":"Upload path to a repo in Azure DevOps.","title":"SYNOPSIS"},{"location":"Add-FilesToRepo/#syntax","text":"Add-FilesToRepo [-CollectionUri] <String> [[-PAT] <String>] [-RepoName] <String> [-ProjectName] <String> [-Path] <String> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Add-FilesToRepo/#description","text":"Upload path to a repo in Azure DevOps.","title":"DESCRIPTION"},{"location":"Add-FilesToRepo/#examples","text":"","title":"EXAMPLES"},{"location":"Add-FilesToRepo/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoRepo @params This example creates a new Azure DevOps repo with splatting parameters","title":"EXAMPLE 1"},{"location":"Add-FilesToRepo/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' 'test', 'test2' | New-AzDoRepo -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" This example creates a new Azure DevOps repo for each in pipeline","title":"EXAMPLE 2"},{"location":"Add-FilesToRepo/#parameters","text":"","title":"PARAMETERS"},{"location":"Add-FilesToRepo/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Add-FilesToRepo/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Add-FilesToRepo/#-reponame","text":"Name of the new repository Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"Add-FilesToRepo/#-projectname","text":"Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Add-FilesToRepo/#-path","text":"Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Path"},{"location":"Add-FilesToRepo/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Add-FilesToRepo/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Add-FilesToRepo/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Add-FilesToRepo/#inputs","text":"","title":"INPUTS"},{"location":"Add-FilesToRepo/#outputs","text":"","title":"OUTPUTS"},{"location":"Add-FilesToRepo/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Add-FilesToRepo/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"Add-FilesToRepo/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"Add-FilesToRepo/#reponame-resname","text":"","title":"RepoName      = $res.name"},{"location":"Add-FilesToRepo/#repoid-resid","text":"","title":"RepoId        = $res.id"},{"location":"Add-FilesToRepo/#repourl-resurl","text":"","title":"RepoURL       = $res.url"},{"location":"Add-FilesToRepo/#weburl-resweburl","text":"","title":"WebUrl        = $res.webUrl"},{"location":"Add-FilesToRepo/#httpsurl-resremoteurl","text":"","title":"HttpsUrl      = $res.remoteUrl"},{"location":"Add-FilesToRepo/#sshurl-ressshurl","text":"","title":"SshUrl        = $res.sshUrl"},{"location":"Add-FilesToRepo/#_1","text":"","title":"}"},{"location":"Add-FilesToRepo/#notes","text":"","title":"NOTES"},{"location":"Add-FilesToRepo/#related-links","text":"","title":"RELATED LINKS"},{"location":"Clear-AzDoAuthHeader/","text":"Clear-AzDoAuthHeader # SYNOPSIS # {{ Fill in the Synopsis }} SYNTAX # Clear-AzDoAuthHeader [<CommonParameters>] DESCRIPTION # {{ Fill in the Description }} EXAMPLES # Example 1 # PS C :\\> {{ Add example code here }} {{ Add example description here }} PARAMETERS # CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # None # OUTPUTS # System.Object # NOTES # RELATED LINKS #","title":"Clear-AzDoAuthHeader"},{"location":"Clear-AzDoAuthHeader/#clear-azdoauthheader","text":"","title":"Clear-AzDoAuthHeader"},{"location":"Clear-AzDoAuthHeader/#synopsis","text":"{{ Fill in the Synopsis }}","title":"SYNOPSIS"},{"location":"Clear-AzDoAuthHeader/#syntax","text":"Clear-AzDoAuthHeader [<CommonParameters>]","title":"SYNTAX"},{"location":"Clear-AzDoAuthHeader/#description","text":"{{ Fill in the Description }}","title":"DESCRIPTION"},{"location":"Clear-AzDoAuthHeader/#examples","text":"","title":"EXAMPLES"},{"location":"Clear-AzDoAuthHeader/#example-1","text":"PS C :\\> {{ Add example code here }} {{ Add example description here }}","title":"Example 1"},{"location":"Clear-AzDoAuthHeader/#parameters","text":"","title":"PARAMETERS"},{"location":"Clear-AzDoAuthHeader/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Clear-AzDoAuthHeader/#inputs","text":"","title":"INPUTS"},{"location":"Clear-AzDoAuthHeader/#none","text":"","title":"None"},{"location":"Clear-AzDoAuthHeader/#outputs","text":"","title":"OUTPUTS"},{"location":"Clear-AzDoAuthHeader/#systemobject","text":"","title":"System.Object"},{"location":"Clear-AzDoAuthHeader/#notes","text":"","title":"NOTES"},{"location":"Clear-AzDoAuthHeader/#related-links","text":"","title":"RELATED LINKS"},{"location":"Get-AzDoEnvironment/","text":"Get-AzDoEnvironment # SYNOPSIS # Creates a Build Validation policy on a branch SYNTAX # Get-AzDoEnvironment [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Build Validation policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -Name # Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # Id = $result.id # Url = $result.url # } # NOTES # RELATED LINKS #","title":"Get-AzDoEnvironment"},{"location":"Get-AzDoEnvironment/#get-azdoenvironment","text":"","title":"Get-AzDoEnvironment"},{"location":"Get-AzDoEnvironment/#synopsis","text":"Creates a Build Validation policy on a branch","title":"SYNOPSIS"},{"location":"Get-AzDoEnvironment/#syntax","text":"Get-AzDoEnvironment [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Get-AzDoEnvironment/#description","text":"Creates a Build Validation policy on a branch","title":"DESCRIPTION"},{"location":"Get-AzDoEnvironment/#examples","text":"","title":"EXAMPLES"},{"location":"Get-AzDoEnvironment/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters","title":"EXAMPLE 1"},{"location":"Get-AzDoEnvironment/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch","title":"EXAMPLE 2"},{"location":"Get-AzDoEnvironment/#parameters","text":"","title":"PARAMETERS"},{"location":"Get-AzDoEnvironment/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Get-AzDoEnvironment/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Get-AzDoEnvironment/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Get-AzDoEnvironment/#-name","text":"Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Name"},{"location":"Get-AzDoEnvironment/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Get-AzDoEnvironment/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Get-AzDoEnvironment/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-AzDoEnvironment/#inputs","text":"","title":"INPUTS"},{"location":"Get-AzDoEnvironment/#outputs","text":"","title":"OUTPUTS"},{"location":"Get-AzDoEnvironment/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Get-AzDoEnvironment/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"Get-AzDoEnvironment/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"Get-AzDoEnvironment/#reponame-reponame","text":"","title":"RepoName      = $RepoName"},{"location":"Get-AzDoEnvironment/#id-resultid","text":"","title":"Id            = $result.id"},{"location":"Get-AzDoEnvironment/#url-resulturl","text":"","title":"Url           = $result.url"},{"location":"Get-AzDoEnvironment/#_1","text":"","title":"}"},{"location":"Get-AzDoEnvironment/#notes","text":"","title":"NOTES"},{"location":"Get-AzDoEnvironment/#related-links","text":"","title":"RELATED LINKS"},{"location":"Get-AzDoProject/","text":"Get-AzDoProject # SYNOPSIS # Gets information about projects in Azure DevOps. SYNTAX # Get-AzDoProject [[-CollectionUri] <String>] [[-PAT] <String>] [[-ProjectName] <String>] [<CommonParameters>] DESCRIPTION # Gets information about all the projects in Azure DevOps. EXAMPLES # EXAMPLE 1 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" } Get-AzDoProject @params This example will List all the projects contained in the collection ('https://dev.azure.com/contoso'). EXAMPLE 2 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = 'Project1' } Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso'). EXAMPLE 3 # $params = @{ collectionuri = \"https://dev.azure.com/contoso\" PAT = \"***\" } $somedifferentobject = [PSCustomObject]@{ ProjectName = 'Project1' } $somedifferentobject | Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso'). EXAMPLE 4 # $params = @{ collectionuri = \"https://dev.azure.com/contoso\" PAT = \"***\" } @( 'Project1', 'Project2' ) | Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso'). PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSObject with repo(s). # NOTES # RELATED LINKS #","title":"Get-AzDoProject"},{"location":"Get-AzDoProject/#get-azdoproject","text":"","title":"Get-AzDoProject"},{"location":"Get-AzDoProject/#synopsis","text":"Gets information about projects in Azure DevOps.","title":"SYNOPSIS"},{"location":"Get-AzDoProject/#syntax","text":"Get-AzDoProject [[-CollectionUri] <String>] [[-PAT] <String>] [[-ProjectName] <String>] [<CommonParameters>]","title":"SYNTAX"},{"location":"Get-AzDoProject/#description","text":"Gets information about all the projects in Azure DevOps.","title":"DESCRIPTION"},{"location":"Get-AzDoProject/#examples","text":"","title":"EXAMPLES"},{"location":"Get-AzDoProject/#example-1","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" } Get-AzDoProject @params This example will List all the projects contained in the collection ('https://dev.azure.com/contoso').","title":"EXAMPLE 1"},{"location":"Get-AzDoProject/#example-2","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = 'Project1' } Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso').","title":"EXAMPLE 2"},{"location":"Get-AzDoProject/#example-3","text":"$params = @{ collectionuri = \"https://dev.azure.com/contoso\" PAT = \"***\" } $somedifferentobject = [PSCustomObject]@{ ProjectName = 'Project1' } $somedifferentobject | Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso').","title":"EXAMPLE 3"},{"location":"Get-AzDoProject/#example-4","text":"$params = @{ collectionuri = \"https://dev.azure.com/contoso\" PAT = \"***\" } @( 'Project1', 'Project2' ) | Get-AzDoProject @params This example will get the details of 'Project1' contained in the collection ('https://dev.azure.com/contoso').","title":"EXAMPLE 4"},{"location":"Get-AzDoProject/#parameters","text":"","title":"PARAMETERS"},{"location":"Get-AzDoProject/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Get-AzDoProject/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Get-AzDoProject/#-projectname","text":"Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Get-AzDoProject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-AzDoProject/#inputs","text":"","title":"INPUTS"},{"location":"Get-AzDoProject/#outputs","text":"","title":"OUTPUTS"},{"location":"Get-AzDoProject/#psobject-with-repos","text":"","title":"PSObject with repo(s)."},{"location":"Get-AzDoProject/#notes","text":"","title":"NOTES"},{"location":"Get-AzDoProject/#related-links","text":"","title":"RELATED LINKS"},{"location":"Get-AzDoRepo/","text":"Get-AzDoRepo # SYNOPSIS # Gets information about a repo in Azure DevOps. SYNTAX # Get-AzDoRepo [-CollectionUri] <String> [[-PAT] <String>] [[-Name] <String>] [-ProjectName] <String> [<CommonParameters>] DESCRIPTION # Gets information about 1 repo if the parameter $Name is filled in. Otherwise it will list all the repo's. EXAMPLES # EXAMPLE 1 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" This example will list all the repo's contained in 'Project 1'. EXAMPLE 2 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" -Name \"Repo 1\" This example will fetch information about the repo with the name 'Repo 1'. EXAMPLE 3 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name \"Repo 1\" } get-AzDoProject -pat $pat -CollectionUri $collectionuri | Get-AzDoRepo -PAT $PAT This example will fetch information about the repo with the name 'Repo 1'. PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -Name # Name of the Repo to get information about Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSObject with repo(s). # NOTES # RELATED LINKS #","title":"Get-AzDoRepo"},{"location":"Get-AzDoRepo/#get-azdorepo","text":"","title":"Get-AzDoRepo"},{"location":"Get-AzDoRepo/#synopsis","text":"Gets information about a repo in Azure DevOps.","title":"SYNOPSIS"},{"location":"Get-AzDoRepo/#syntax","text":"Get-AzDoRepo [-CollectionUri] <String> [[-PAT] <String>] [[-Name] <String>] [-ProjectName] <String> [<CommonParameters>]","title":"SYNTAX"},{"location":"Get-AzDoRepo/#description","text":"Gets information about 1 repo if the parameter $Name is filled in. Otherwise it will list all the repo's.","title":"DESCRIPTION"},{"location":"Get-AzDoRepo/#examples","text":"","title":"EXAMPLES"},{"location":"Get-AzDoRepo/#example-1","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" This example will list all the repo's contained in 'Project 1'.","title":"EXAMPLE 1"},{"location":"Get-AzDoRepo/#example-2","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" -Name \"Repo 1\" This example will fetch information about the repo with the name 'Repo 1'.","title":"EXAMPLE 2"},{"location":"Get-AzDoRepo/#example-3","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name \"Repo 1\" } get-AzDoProject -pat $pat -CollectionUri $collectionuri | Get-AzDoRepo -PAT $PAT This example will fetch information about the repo with the name 'Repo 1'.","title":"EXAMPLE 3"},{"location":"Get-AzDoRepo/#parameters","text":"","title":"PARAMETERS"},{"location":"Get-AzDoRepo/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Get-AzDoRepo/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Get-AzDoRepo/#-name","text":"Name of the Repo to get information about Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Name"},{"location":"Get-AzDoRepo/#-projectname","text":"Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Get-AzDoRepo/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-AzDoRepo/#inputs","text":"","title":"INPUTS"},{"location":"Get-AzDoRepo/#outputs","text":"","title":"OUTPUTS"},{"location":"Get-AzDoRepo/#psobject-with-repos","text":"","title":"PSObject with repo(s)."},{"location":"Get-AzDoRepo/#notes","text":"","title":"NOTES"},{"location":"Get-AzDoRepo/#related-links","text":"","title":"RELATED LINKS"},{"location":"Get-AzDoServiceConnection/","text":"Get-AzDoServiceConnection # SYNOPSIS # Gets information about a repo in Azure DevOps. SYNTAX # Get-AzDoServiceConnection [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-ServiceConnectionName] <String[]>] [<CommonParameters>] DESCRIPTION # Gets information about 1 repo if the parameter $Name is filled in. Otherwise it will list all the repo's. EXAMPLES # EXAMPLE 1 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" This example will list all the repo's contained in 'Project 1'. EXAMPLE 2 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" -Name \"Repo 1\" This example will fetch information about the repo with the name 'Repo 1'. EXAMPLE 3 # $Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name \"Repo 1\" } get-AzDoProject -pat $pat -CollectionUri $collectionuri | Get-AzDoRepo -PAT $PAT This example will fetch information about the repo with the name 'Repo 1'. PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ProjectName # Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ServiceConnectionName # Name of the Repo to get information about Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSObject with repo(s). # NOTES # RELATED LINKS #","title":"Get-AzDoServiceConnection"},{"location":"Get-AzDoServiceConnection/#get-azdoserviceconnection","text":"","title":"Get-AzDoServiceConnection"},{"location":"Get-AzDoServiceConnection/#synopsis","text":"Gets information about a repo in Azure DevOps.","title":"SYNOPSIS"},{"location":"Get-AzDoServiceConnection/#syntax","text":"Get-AzDoServiceConnection [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-ServiceConnectionName] <String[]>] [<CommonParameters>]","title":"SYNTAX"},{"location":"Get-AzDoServiceConnection/#description","text":"Gets information about 1 repo if the parameter $Name is filled in. Otherwise it will list all the repo's.","title":"DESCRIPTION"},{"location":"Get-AzDoServiceConnection/#examples","text":"","title":"EXAMPLES"},{"location":"Get-AzDoServiceConnection/#example-1","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" This example will list all the repo's contained in 'Project 1'.","title":"EXAMPLE 1"},{"location":"Get-AzDoServiceConnection/#example-2","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" Name \"Repo 1\" } Get-AzDoRepo -CollectionUri = \"https://dev.azure.com/contoso\" -PAT = \"***\" -ProjectName = \"Project 1\" -Name \"Repo 1\" This example will fetch information about the repo with the name 'Repo 1'.","title":"EXAMPLE 2"},{"location":"Get-AzDoServiceConnection/#example-3","text":"$Params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name \"Repo 1\" } get-AzDoProject -pat $pat -CollectionUri $collectionuri | Get-AzDoRepo -PAT $PAT This example will fetch information about the repo with the name 'Repo 1'.","title":"EXAMPLE 3"},{"location":"Get-AzDoServiceConnection/#parameters","text":"","title":"PARAMETERS"},{"location":"Get-AzDoServiceConnection/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Get-AzDoServiceConnection/#-projectname","text":"Project where the Repos are contained Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Get-AzDoServiceConnection/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Get-AzDoServiceConnection/#-serviceconnectionname","text":"Name of the Repo to get information about Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ServiceConnectionName"},{"location":"Get-AzDoServiceConnection/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-AzDoServiceConnection/#inputs","text":"","title":"INPUTS"},{"location":"Get-AzDoServiceConnection/#outputs","text":"","title":"OUTPUTS"},{"location":"Get-AzDoServiceConnection/#psobject-with-repos","text":"","title":"PSObject with repo(s)."},{"location":"Get-AzDoServiceConnection/#notes","text":"","title":"NOTES"},{"location":"Get-AzDoServiceConnection/#related-links","text":"","title":"RELATED LINKS"},{"location":"Get-AzDoVariableGroup/","text":"Get-AzDoVariableGroup # SYNOPSIS # This script gets a variable group details in a given project. SYNTAX # Get-AzDoVariableGroup [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [[-Name] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # This script gets a variable groups a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables. EXAMPLES # EXAMPLE 1 # $params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' VariableGroupName = 'VariableGroup1','VariableGroup2' } Get-AzDoVariableGroup @params This example gets Variable Groups 'VariableGroup1' and 'VariableGroup2' . EXAMPLE 2 # $params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' } Get-AzDoVariableGroup @params This example gets all variable groups the user has access to within a project. PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Name # Name of the variable group Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSObject # NOTES # RELATED LINKS #","title":"Get-AzDoVariableGroup"},{"location":"Get-AzDoVariableGroup/#get-azdovariablegroup","text":"","title":"Get-AzDoVariableGroup"},{"location":"Get-AzDoVariableGroup/#synopsis","text":"This script gets a variable group details in a given project.","title":"SYNOPSIS"},{"location":"Get-AzDoVariableGroup/#syntax","text":"Get-AzDoVariableGroup [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [[-Name] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Get-AzDoVariableGroup/#description","text":"This script gets a variable groups a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables.","title":"DESCRIPTION"},{"location":"Get-AzDoVariableGroup/#examples","text":"","title":"EXAMPLES"},{"location":"Get-AzDoVariableGroup/#example-1","text":"$params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' VariableGroupName = 'VariableGroup1','VariableGroup2' } Get-AzDoVariableGroup @params This example gets Variable Groups 'VariableGroup1' and 'VariableGroup2' .","title":"EXAMPLE 1"},{"location":"Get-AzDoVariableGroup/#example-2","text":"$params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' } Get-AzDoVariableGroup @params This example gets all variable groups the user has access to within a project.","title":"EXAMPLE 2"},{"location":"Get-AzDoVariableGroup/#parameters","text":"","title":"PARAMETERS"},{"location":"Get-AzDoVariableGroup/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Get-AzDoVariableGroup/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Get-AzDoVariableGroup/#-projectname","text":"Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Get-AzDoVariableGroup/#-name","text":"Name of the variable group Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Name"},{"location":"Get-AzDoVariableGroup/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Get-AzDoVariableGroup/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Get-AzDoVariableGroup/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-AzDoVariableGroup/#inputs","text":"","title":"INPUTS"},{"location":"Get-AzDoVariableGroup/#outputs","text":"","title":"OUTPUTS"},{"location":"Get-AzDoVariableGroup/#psobject","text":"","title":"PSObject"},{"location":"Get-AzDoVariableGroup/#notes","text":"","title":"NOTES"},{"location":"Get-AzDoVariableGroup/#related-links","text":"","title":"RELATED LINKS"},{"location":"New-AzDoEnvironment/","text":"New-AzDoEnvironment # SYNOPSIS # Creates a Build Validation policy on a branch SYNTAX # New-AzDoEnvironment [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [[-Description] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Build Validation policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -Name # Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Description # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # Id = $result.id # Url = $result.url # } # NOTES # RELATED LINKS #","title":"New-AzDoEnvironment"},{"location":"New-AzDoEnvironment/#new-azdoenvironment","text":"","title":"New-AzDoEnvironment"},{"location":"New-AzDoEnvironment/#synopsis","text":"Creates a Build Validation policy on a branch","title":"SYNOPSIS"},{"location":"New-AzDoEnvironment/#syntax","text":"New-AzDoEnvironment [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [[-Description] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"New-AzDoEnvironment/#description","text":"Creates a Build Validation policy on a branch","title":"DESCRIPTION"},{"location":"New-AzDoEnvironment/#examples","text":"","title":"EXAMPLES"},{"location":"New-AzDoEnvironment/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters","title":"EXAMPLE 1"},{"location":"New-AzDoEnvironment/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch","title":"EXAMPLE 2"},{"location":"New-AzDoEnvironment/#parameters","text":"","title":"PARAMETERS"},{"location":"New-AzDoEnvironment/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"New-AzDoEnvironment/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"New-AzDoEnvironment/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"New-AzDoEnvironment/#-name","text":"Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Name"},{"location":"New-AzDoEnvironment/#-description","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Description"},{"location":"New-AzDoEnvironment/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"New-AzDoEnvironment/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"New-AzDoEnvironment/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-AzDoEnvironment/#inputs","text":"","title":"INPUTS"},{"location":"New-AzDoEnvironment/#outputs","text":"","title":"OUTPUTS"},{"location":"New-AzDoEnvironment/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"New-AzDoEnvironment/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"New-AzDoEnvironment/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"New-AzDoEnvironment/#reponame-reponame","text":"","title":"RepoName      = $RepoName"},{"location":"New-AzDoEnvironment/#id-resultid","text":"","title":"Id            = $result.id"},{"location":"New-AzDoEnvironment/#url-resulturl","text":"","title":"Url           = $result.url"},{"location":"New-AzDoEnvironment/#_1","text":"","title":"}"},{"location":"New-AzDoEnvironment/#notes","text":"","title":"NOTES"},{"location":"New-AzDoEnvironment/#related-links","text":"","title":"RELATED LINKS"},{"location":"New-AzDoPipeline/","text":"New-AzDoPipeline # SYNOPSIS # Creates an Azure Pipeline SYNTAX # New-AzDoPipeline [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-PipelineName] <String> [-RepoName] <Object> [[-Path] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates an Azure Pipeline in a given Azure Project based on a repo EXAMPLES # EXAMPLE 1 # $newAzDoPipelineSplat = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" PipelineName = \"Pipeline 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoPipeline @newAzDoPipelineSplat This example creates a new Azure Pipeline using the PowerShell pipeline EXAMPLE 2 # Get-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT $PAT | Get-AzDoRepo -RepoName 'Repo 1' -PAT $PAT | New-AzDoPipeline -PipelineName \"Pipeline 1\" -PAT $PAT This example creates a new Azure Pipeline PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -PipelineName # Name of the Pipeline Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -RepoName # Name of the Repository containing the YAML-sourcecode Type : Object Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Path # Path of the YAML-sourcecode in the Repository Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : /main.yaml Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSobject. An object containing the name, the folder and the URI of the pipeline # NOTES # RELATED LINKS #","title":"New-AzDoPipeline"},{"location":"New-AzDoPipeline/#new-azdopipeline","text":"","title":"New-AzDoPipeline"},{"location":"New-AzDoPipeline/#synopsis","text":"Creates an Azure Pipeline","title":"SYNOPSIS"},{"location":"New-AzDoPipeline/#syntax","text":"New-AzDoPipeline [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-PipelineName] <String> [-RepoName] <Object> [[-Path] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"New-AzDoPipeline/#description","text":"Creates an Azure Pipeline in a given Azure Project based on a repo","title":"DESCRIPTION"},{"location":"New-AzDoPipeline/#examples","text":"","title":"EXAMPLES"},{"location":"New-AzDoPipeline/#example-1","text":"$newAzDoPipelineSplat = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" PipelineName = \"Pipeline 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoPipeline @newAzDoPipelineSplat This example creates a new Azure Pipeline using the PowerShell pipeline","title":"EXAMPLE 1"},{"location":"New-AzDoPipeline/#example-2","text":"Get-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT $PAT | Get-AzDoRepo -RepoName 'Repo 1' -PAT $PAT | New-AzDoPipeline -PipelineName \"Pipeline 1\" -PAT $PAT This example creates a new Azure Pipeline","title":"EXAMPLE 2"},{"location":"New-AzDoPipeline/#parameters","text":"","title":"PARAMETERS"},{"location":"New-AzDoPipeline/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"New-AzDoPipeline/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ProjectName"},{"location":"New-AzDoPipeline/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"New-AzDoPipeline/#-pipelinename","text":"Name of the Pipeline Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-PipelineName"},{"location":"New-AzDoPipeline/#-reponame","text":"Name of the Repository containing the YAML-sourcecode Type : Object Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-RepoName"},{"location":"New-AzDoPipeline/#-path","text":"Path of the YAML-sourcecode in the Repository Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : /main.yaml Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Path"},{"location":"New-AzDoPipeline/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"New-AzDoPipeline/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"New-AzDoPipeline/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-AzDoPipeline/#inputs","text":"","title":"INPUTS"},{"location":"New-AzDoPipeline/#outputs","text":"","title":"OUTPUTS"},{"location":"New-AzDoPipeline/#psobject-an-object-containing-the-name-the-folder-and-the-uri-of-the-pipeline","text":"","title":"PSobject. An object containing the name, the folder and the URI of the pipeline"},{"location":"New-AzDoPipeline/#notes","text":"","title":"NOTES"},{"location":"New-AzDoPipeline/#related-links","text":"","title":"RELATED LINKS"},{"location":"New-AzDoProject/","text":"New-AzDoProject # SYNOPSIS # Function to create an Azure DevOps project SYNTAX # New-AzDoProject [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String[]> [[-Description] <String>] [[-SourceControlType] <String>] [[-Visibility] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Function to create an Azure DevOps project EXAMPLES # EXAMPLE 1 # New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" This example creates a new private Azure DevOps project EXAMPLE 2 # New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" -Visibility 'public' This example creates a new public Azure DevOps project EXAMPLE 3 # @(\"MyProject1\",\"Myproject2\") | New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" This example creates two new Azure DevOps projects using the pipeline. EXAMPLE 4 # [pscustomobject]@{ ProjectName = 'Project 1' Visibility = 'public' Description = 'This is the best project' }, [pscustomobject]@{ ProjectName = 'Project 1' Description = 'This is the best project' } | New-AzDoProject -PAT $PAT -CollectionUri $CollectionUri This example creates two new Azure DevOps projects using the pipeline. PARAMETERS # -CollectionUri # Collection URI. e.g. https://dev.azure.com/contoso. Azure Pipelines has a predefined variable for this. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Name of the project. Length - Must not be a system reserved name. - Must not be one of the hidden segments used for IIS request filtering like App_Browsers, App_code, App_Data, App_GlobalResources, App_LocalResources, App_Themes, App_WebResources, bin, or web.config. - Must not contain any Unicode control characters or surrogate characters. - Must not contain the following printable characters: \\ / : * ? \" \\< > | ; # $ * { } , + = [ ]. - Must not start with an underscore _. - Must not start or end with a period .. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Description # Description of the project Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -SourceControlType # Type of source control. Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : GIT Accept pipeline input : False Accept wildcard characters : False -Visibility # Visibility of the project (private or public). Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : Private Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # NOTES # RELATED LINKS #","title":"New-AzDoProject"},{"location":"New-AzDoProject/#new-azdoproject","text":"","title":"New-AzDoProject"},{"location":"New-AzDoProject/#synopsis","text":"Function to create an Azure DevOps project","title":"SYNOPSIS"},{"location":"New-AzDoProject/#syntax","text":"New-AzDoProject [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String[]> [[-Description] <String>] [[-SourceControlType] <String>] [[-Visibility] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"New-AzDoProject/#description","text":"Function to create an Azure DevOps project","title":"DESCRIPTION"},{"location":"New-AzDoProject/#examples","text":"","title":"EXAMPLES"},{"location":"New-AzDoProject/#example-1","text":"New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" This example creates a new private Azure DevOps project","title":"EXAMPLE 1"},{"location":"New-AzDoProject/#example-2","text":"New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" -Visibility 'public' This example creates a new public Azure DevOps project","title":"EXAMPLE 2"},{"location":"New-AzDoProject/#example-3","text":"@(\"MyProject1\",\"Myproject2\") | New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" This example creates two new Azure DevOps projects using the pipeline.","title":"EXAMPLE 3"},{"location":"New-AzDoProject/#example-4","text":"[pscustomobject]@{ ProjectName = 'Project 1' Visibility = 'public' Description = 'This is the best project' }, [pscustomobject]@{ ProjectName = 'Project 1' Description = 'This is the best project' } | New-AzDoProject -PAT $PAT -CollectionUri $CollectionUri This example creates two new Azure DevOps projects using the pipeline.","title":"EXAMPLE 4"},{"location":"New-AzDoProject/#parameters","text":"","title":"PARAMETERS"},{"location":"New-AzDoProject/#-collectionuri","text":"Collection URI. e.g. https://dev.azure.com/contoso. Azure Pipelines has a predefined variable for this. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"New-AzDoProject/#-pat","text":"PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"New-AzDoProject/#-projectname","text":"Name of the project. Length - Must not be a system reserved name. - Must not be one of the hidden segments used for IIS request filtering like App_Browsers, App_code, App_Data, App_GlobalResources, App_LocalResources, App_Themes, App_WebResources, bin, or web.config. - Must not contain any Unicode control characters or surrogate characters. - Must not contain the following printable characters: \\ / : * ? \" \\< > | ; # $ * { } , + = [ ]. - Must not start with an underscore _. - Must not start or end with a period .. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"New-AzDoProject/#-description","text":"Description of the project Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Description"},{"location":"New-AzDoProject/#-sourcecontroltype","text":"Type of source control. Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : GIT Accept pipeline input : False Accept wildcard characters : False","title":"-SourceControlType"},{"location":"New-AzDoProject/#-visibility","text":"Visibility of the project (private or public). Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : Private Accept pipeline input : False Accept wildcard characters : False","title":"-Visibility"},{"location":"New-AzDoProject/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"New-AzDoProject/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"New-AzDoProject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-AzDoProject/#inputs","text":"","title":"INPUTS"},{"location":"New-AzDoProject/#outputs","text":"","title":"OUTPUTS"},{"location":"New-AzDoProject/#notes","text":"","title":"NOTES"},{"location":"New-AzDoProject/#related-links","text":"","title":"RELATED LINKS"},{"location":"New-AzDoRepo/","text":"New-AzDoRepo # SYNOPSIS # Creates a repo in Azure DevOps. SYNTAX # New-AzDoRepo [-CollectionUri] <String> [[-PAT] <String>] [-RepoName] <String> [-ProjectName] <String> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a repo in Azure DevOps. EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoRepo @params This example creates a new Azure DevOps repo with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' 'test', 'test2' | New-AzDoRepo -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" This example creates a new Azure DevOps repo for each in pipeline PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the new repository Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $res.name # RepoId = $res.id # RepoURL = $res.url # WebUrl = $res.webUrl # HttpsUrl = $res.remoteUrl # SshUrl = $res.sshUrl # } # NOTES # RELATED LINKS #","title":"New-AzDoRepo"},{"location":"New-AzDoRepo/#new-azdorepo","text":"","title":"New-AzDoRepo"},{"location":"New-AzDoRepo/#synopsis","text":"Creates a repo in Azure DevOps.","title":"SYNOPSIS"},{"location":"New-AzDoRepo/#syntax","text":"New-AzDoRepo [-CollectionUri] <String> [[-PAT] <String>] [-RepoName] <String> [-ProjectName] <String> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"New-AzDoRepo/#description","text":"Creates a repo in Azure DevOps.","title":"DESCRIPTION"},{"location":"New-AzDoRepo/#examples","text":"","title":"EXAMPLES"},{"location":"New-AzDoRepo/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Repo 1\" ProjectName = \"Project 1\" } New-AzDoRepo @params This example creates a new Azure DevOps repo with splatting parameters","title":"EXAMPLE 1"},{"location":"New-AzDoRepo/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' 'test', 'test2' | New-AzDoRepo -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" This example creates a new Azure DevOps repo for each in pipeline","title":"EXAMPLE 2"},{"location":"New-AzDoRepo/#parameters","text":"","title":"PARAMETERS"},{"location":"New-AzDoRepo/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"New-AzDoRepo/#-pat","text":"PAT to authenticate with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"New-AzDoRepo/#-reponame","text":"Name of the new repository Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"New-AzDoRepo/#-projectname","text":"Name of the project where the new repository has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProjectName"},{"location":"New-AzDoRepo/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"New-AzDoRepo/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"New-AzDoRepo/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-AzDoRepo/#inputs","text":"","title":"INPUTS"},{"location":"New-AzDoRepo/#outputs","text":"","title":"OUTPUTS"},{"location":"New-AzDoRepo/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"New-AzDoRepo/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"New-AzDoRepo/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"New-AzDoRepo/#reponame-resname","text":"","title":"RepoName      = $res.name"},{"location":"New-AzDoRepo/#repoid-resid","text":"","title":"RepoId        = $res.id"},{"location":"New-AzDoRepo/#repourl-resurl","text":"","title":"RepoURL       = $res.url"},{"location":"New-AzDoRepo/#weburl-resweburl","text":"","title":"WebUrl        = $res.webUrl"},{"location":"New-AzDoRepo/#httpsurl-resremoteurl","text":"","title":"HttpsUrl      = $res.remoteUrl"},{"location":"New-AzDoRepo/#sshurl-ressshurl","text":"","title":"SshUrl        = $res.sshUrl"},{"location":"New-AzDoRepo/#_1","text":"","title":"}"},{"location":"New-AzDoRepo/#notes","text":"","title":"NOTES"},{"location":"New-AzDoRepo/#related-links","text":"","title":"RELATED LINKS"},{"location":"New-AzDoVariableGroup/","text":"New-AzDoVariableGroup # SYNOPSIS # This script creates a variable group with at least 1 variable in a given project. SYNTAX # New-AzDoVariableGroup [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-VariableGroupName] <String[]> [-Variables] <Hashtable> [[-Description] <String>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # This script creates a variable group with at least 1 variable in a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables. EXAMPLES # EXAMPLE 1 # $params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' VariableGroupName = 'VariableGroup1' Variables = @{ test = @{ value = 'test' } } Description = 'This is a test' } New-AzDoVariableGroup @params This example creates a new Variable Group with a variable \"test = test\". EXAMPLE 2 # $params = @{ Collectionuri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' Variables = @{ test = @{ value = 'test' } } Description = 'This is a test' PAT = $PAT } @( 'dev-group' 'acc-group' 'prd-group' ) | New-AzDoVariableGroup @params This example creates a few new Variable Groups with a variable \"test = test\". PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -VariableGroupName # Name of the variable group Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Variables # Variable names and values Type : Hashtable Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -Description # Description of the variable group Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSobject # NOTES # RELATED LINKS #","title":"New-AzDoVariableGroup"},{"location":"New-AzDoVariableGroup/#new-azdovariablegroup","text":"","title":"New-AzDoVariableGroup"},{"location":"New-AzDoVariableGroup/#synopsis","text":"This script creates a variable group with at least 1 variable in a given project.","title":"SYNOPSIS"},{"location":"New-AzDoVariableGroup/#syntax","text":"New-AzDoVariableGroup [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-VariableGroupName] <String[]> [-Variables] <Hashtable> [[-Description] <String>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"New-AzDoVariableGroup/#description","text":"This script creates a variable group with at least 1 variable in a given project. When used in a pipeline, you can use the pre defined CollectionUri, ProjectName and AccessToken (PAT) variables.","title":"DESCRIPTION"},{"location":"New-AzDoVariableGroup/#examples","text":"","title":"EXAMPLES"},{"location":"New-AzDoVariableGroup/#example-1","text":"$params = @{ Collectionuri = 'https://dev.azure.com/weareinspark/' PAT = '*******************' ProjectName = 'Project 1' VariableGroupName = 'VariableGroup1' Variables = @{ test = @{ value = 'test' } } Description = 'This is a test' } New-AzDoVariableGroup @params This example creates a new Variable Group with a variable \"test = test\".","title":"EXAMPLE 1"},{"location":"New-AzDoVariableGroup/#example-2","text":"$params = @{ Collectionuri = 'https://dev.azure.com/ChristianPiet0452/' ProjectName = 'Ditproject' Variables = @{ test = @{ value = 'test' } } Description = 'This is a test' PAT = $PAT } @( 'dev-group' 'acc-group' 'prd-group' ) | New-AzDoVariableGroup @params This example creates a few new Variable Groups with a variable \"test = test\".","title":"EXAMPLE 2"},{"location":"New-AzDoVariableGroup/#parameters","text":"","title":"PARAMETERS"},{"location":"New-AzDoVariableGroup/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-CollectionUri"},{"location":"New-AzDoVariableGroup/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"New-AzDoVariableGroup/#-projectname","text":"Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProjectName"},{"location":"New-AzDoVariableGroup/#-variablegroupname","text":"Name of the variable group Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-VariableGroupName"},{"location":"New-AzDoVariableGroup/#-variables","text":"Variable names and values Type : Hashtable Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Variables"},{"location":"New-AzDoVariableGroup/#-description","text":"Description of the variable group Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Description"},{"location":"New-AzDoVariableGroup/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"New-AzDoVariableGroup/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"New-AzDoVariableGroup/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-AzDoVariableGroup/#inputs","text":"","title":"INPUTS"},{"location":"New-AzDoVariableGroup/#outputs","text":"","title":"OUTPUTS"},{"location":"New-AzDoVariableGroup/#psobject","text":"","title":"PSobject"},{"location":"New-AzDoVariableGroup/#notes","text":"","title":"NOTES"},{"location":"New-AzDoVariableGroup/#related-links","text":"","title":"RELATED LINKS"},{"location":"Remove-AzDoProject/","text":"Remove-AzDoProject # SYNOPSIS # Function to create an Azure DevOps project SYNTAX # Remove-AzDoProject [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String[]> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Function to create an Azure DevOps project EXAMPLES # EXAMPLE 1 # New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" This example creates a new private Azure DevOps project EXAMPLE 2 # New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" -Visibility 'public' This example creates a new public Azure DevOps project EXAMPLE 3 # @(\"MyProject1\",\"Myproject2\") | New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" This example creates two new Azure DevOps projects using the pipeline. EXAMPLE 4 # [pscustomobject]@{ ProjectName = 'Project 1' Visibility = 'public' Description = 'This is the best project' }, [pscustomobject]@{ ProjectName = 'Project 1' Description = 'This is the best project' } | New-AzDoProject -PAT $PAT -CollectionUri $CollectionUri This example creates two new Azure DevOps projects using the pipeline. PARAMETERS # -CollectionUri # Collection URI. e.g. https://dev.azure.com/contoso. Azure Pipelines has a predefined variable for this. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PAT # PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Name of the project. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # NOTES # RELATED LINKS #","title":"Remove-AzDoProject"},{"location":"Remove-AzDoProject/#remove-azdoproject","text":"","title":"Remove-AzDoProject"},{"location":"Remove-AzDoProject/#synopsis","text":"Function to create an Azure DevOps project","title":"SYNOPSIS"},{"location":"Remove-AzDoProject/#syntax","text":"Remove-AzDoProject [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String[]> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Remove-AzDoProject/#description","text":"Function to create an Azure DevOps project","title":"DESCRIPTION"},{"location":"Remove-AzDoProject/#examples","text":"","title":"EXAMPLES"},{"location":"Remove-AzDoProject/#example-1","text":"New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" This example creates a new private Azure DevOps project","title":"EXAMPLE 1"},{"location":"Remove-AzDoProject/#example-2","text":"New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" -ProjectName \"Project 1\" -Visibility 'public' This example creates a new public Azure DevOps project","title":"EXAMPLE 2"},{"location":"Remove-AzDoProject/#example-3","text":"@(\"MyProject1\",\"Myproject2\") | New-AzDoProject -CollectionUri \"https://dev.azure.com/contoso\" -PAT \"***\" This example creates two new Azure DevOps projects using the pipeline.","title":"EXAMPLE 3"},{"location":"Remove-AzDoProject/#example-4","text":"[pscustomobject]@{ ProjectName = 'Project 1' Visibility = 'public' Description = 'This is the best project' }, [pscustomobject]@{ ProjectName = 'Project 1' Description = 'This is the best project' } | New-AzDoProject -PAT $PAT -CollectionUri $CollectionUri This example creates two new Azure DevOps projects using the pipeline.","title":"EXAMPLE 4"},{"location":"Remove-AzDoProject/#parameters","text":"","title":"PARAMETERS"},{"location":"Remove-AzDoProject/#-collectionuri","text":"Collection URI. e.g. https://dev.azure.com/contoso. Azure Pipelines has a predefined variable for this. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Remove-AzDoProject/#-pat","text":"PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Remove-AzDoProject/#-projectname","text":"Name of the project. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Remove-AzDoProject/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Remove-AzDoProject/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Remove-AzDoProject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-AzDoProject/#inputs","text":"","title":"INPUTS"},{"location":"Remove-AzDoProject/#outputs","text":"","title":"OUTPUTS"},{"location":"Remove-AzDoProject/#notes","text":"","title":"NOTES"},{"location":"Remove-AzDoProject/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoBranchPolicyBuildValidation/","text":"Set-AzDoBranchPolicyBuildValidation # SYNOPSIS # Creates a Build Validation policy on a branch SYNTAX # Set-AzDoBranchPolicyBuildValidation [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-Required] <Boolean>] [-Id] <Int32> [[-Name] <String>] [[-FilenamePatterns] <Array>] [[-validDuration] <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Build Validation policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Branch # Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False -Required # {{ Fill Required Description }} Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False -Id # Id of the Build Definition (Pipeline) Type : Int32 Parameter Sets : (All) Aliases : Required : True Position : 7 Default value : 0 Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Name # Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -FilenamePatterns # Filename patterns to include in the Build Validation policy. Default is all files Type : Array Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : None Accept pipeline input : False Accept wildcard characters : False -validDuration # Valid duration of the Build Validation policy. Default is 720 minutes Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 10 Default value : 720 Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # Id = $result.id # Url = $result.url # } # NOTES # RELATED LINKS #","title":"Set-AzDoBranchPolicyBuildValidation"},{"location":"Set-AzDoBranchPolicyBuildValidation/#set-azdobranchpolicybuildvalidation","text":"","title":"Set-AzDoBranchPolicyBuildValidation"},{"location":"Set-AzDoBranchPolicyBuildValidation/#synopsis","text":"Creates a Build Validation policy on a branch","title":"SYNOPSIS"},{"location":"Set-AzDoBranchPolicyBuildValidation/#syntax","text":"Set-AzDoBranchPolicyBuildValidation [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-Required] <Boolean>] [-Id] <Int32> [[-Name] <String>] [[-FilenamePatterns] <Array>] [[-validDuration] <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoBranchPolicyBuildValidation/#description","text":"Creates a Build Validation policy on a branch","title":"DESCRIPTION"},{"location":"Set-AzDoBranchPolicyBuildValidation/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoBranchPolicyBuildValidation/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters","title":"EXAMPLE 1"},{"location":"Set-AzDoBranchPolicyBuildValidation/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch","title":"EXAMPLE 2"},{"location":"Set-AzDoBranchPolicyBuildValidation/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-reponame","text":"Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-branch","text":"Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False","title":"-Branch"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-required","text":"{{ Fill Required Description }} Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False","title":"-Required"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-id","text":"Id of the Build Definition (Pipeline) Type : Int32 Parameter Sets : (All) Aliases : Required : True Position : 7 Default value : 0 Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Id"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-name","text":"Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Name"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-filenamepatterns","text":"Filename patterns to include in the Build Validation policy. Default is all files Type : Array Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FilenamePatterns"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-validduration","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 10 Default value : 720 Accept pipeline input : False Accept wildcard characters : False","title":"-validDuration"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoBranchPolicyBuildValidation/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoBranchPolicyBuildValidation/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoBranchPolicyBuildValidation/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoBranchPolicyBuildValidation/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoBranchPolicyBuildValidation/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Set-AzDoBranchPolicyBuildValidation/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"Set-AzDoBranchPolicyBuildValidation/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"Set-AzDoBranchPolicyBuildValidation/#reponame-reponame","text":"","title":"RepoName      = $RepoName"},{"location":"Set-AzDoBranchPolicyBuildValidation/#id-resultid","text":"","title":"Id            = $result.id"},{"location":"Set-AzDoBranchPolicyBuildValidation/#url-resulturl","text":"","title":"Url           = $result.url"},{"location":"Set-AzDoBranchPolicyBuildValidation/#_1","text":"","title":"}"},{"location":"Set-AzDoBranchPolicyBuildValidation/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoBranchPolicyBuildValidation/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoBranchPolicyCommentResolution/","text":"Set-AzDoBranchPolicyCommentResolution # SYNOPSIS # Creates a Comment resolution policy on a branch SYNTAX # Set-AzDoBranchPolicyCommentResolution [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-Required] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Comment resolution policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyCommentResolution @params This example creates a 'Comment resolution' policy with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' 'repo1', 'repo2' | Set-AzDoBranchPolicyCommentResolution -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -PAT \"***\" This example creates a 'Comment resolution' policy on the main branch of repo1 and repo2 PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Branch # Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False -Required # Block pull requests until the comments are resolved Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # id = $res.id # } # NOTES # RELATED LINKS #","title":"Set-AzDoBranchPolicyCommentResolution"},{"location":"Set-AzDoBranchPolicyCommentResolution/#set-azdobranchpolicycommentresolution","text":"","title":"Set-AzDoBranchPolicyCommentResolution"},{"location":"Set-AzDoBranchPolicyCommentResolution/#synopsis","text":"Creates a Comment resolution policy on a branch","title":"SYNOPSIS"},{"location":"Set-AzDoBranchPolicyCommentResolution/#syntax","text":"Set-AzDoBranchPolicyCommentResolution [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-Required] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoBranchPolicyCommentResolution/#description","text":"Creates a Comment resolution policy on a branch","title":"DESCRIPTION"},{"location":"Set-AzDoBranchPolicyCommentResolution/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoBranchPolicyCommentResolution/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyCommentResolution @params This example creates a 'Comment resolution' policy with splatting parameters","title":"EXAMPLE 1"},{"location":"Set-AzDoBranchPolicyCommentResolution/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' 'repo1', 'repo2' | Set-AzDoBranchPolicyCommentResolution -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -PAT \"***\" This example creates a 'Comment resolution' policy on the main branch of repo1 and repo2","title":"EXAMPLE 2"},{"location":"Set-AzDoBranchPolicyCommentResolution/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-reponame","text":"Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-branch","text":"Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False","title":"-Branch"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-required","text":"Block pull requests until the comments are resolved Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False","title":"-Required"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoBranchPolicyCommentResolution/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoBranchPolicyCommentResolution/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoBranchPolicyCommentResolution/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoBranchPolicyCommentResolution/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoBranchPolicyCommentResolution/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Set-AzDoBranchPolicyCommentResolution/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"Set-AzDoBranchPolicyCommentResolution/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"Set-AzDoBranchPolicyCommentResolution/#reponame-reponame","text":"","title":"RepoName      = $RepoName"},{"location":"Set-AzDoBranchPolicyCommentResolution/#id-resid","text":"","title":"id            = $res.id"},{"location":"Set-AzDoBranchPolicyCommentResolution/#_1","text":"","title":"}"},{"location":"Set-AzDoBranchPolicyCommentResolution/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoBranchPolicyCommentResolution/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoBranchPolicyMergeStrategy/","text":"Set-AzDoBranchPolicyMergeStrategy # SYNOPSIS # Creates a Merge strategy policy on a branch SYNTAX # Set-AzDoBranchPolicyMergeStrategy [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-AllowSquash] <Boolean>] [[-AllowNoFastForward] <Boolean>] [[-AllowRebase] <Boolean>] [[-AllowRebaseMerge] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Merge strategy policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyMergeStrategy @params This example creates a 'Require a merge strategy' policy with splatting parameters EXAMPLE 2 # 'repo1', 'repo2' | Set-AzDoBranchPolicyMergeStrategy -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -PAT \"***\" This example creates a 'Require a merge strategy' policy on the main branch of repo1 and repo2 PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -Branch # Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False -AllowSquash # Allow squash merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False -AllowNoFastForward # Allow no fast forward merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False -AllowRebase # Allow rebase merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : False Accept pipeline input : False Accept wildcard characters : False -AllowRebaseMerge # Allow rebase merge message Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : False Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # id = $res.id # allowSquash = $res.settings.allowSquash # allowNoFastForward = $res.settings.allowNoFastForward # allowRebase = $res.settings.allowRebase # allowRebaseMerge = $res.settings.allowRebaseMerge # } # NOTES # RELATED LINKS #","title":"Set-AzDoBranchPolicyMergeStrategy"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#set-azdobranchpolicymergestrategy","text":"","title":"Set-AzDoBranchPolicyMergeStrategy"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#synopsis","text":"Creates a Merge strategy policy on a branch","title":"SYNOPSIS"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#syntax","text":"Set-AzDoBranchPolicyMergeStrategy [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-Branch] <String>] [[-AllowSquash] <Boolean>] [[-AllowNoFastForward] <Boolean>] [[-AllowRebase] <Boolean>] [[-AllowRebaseMerge] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#description","text":"Creates a Merge strategy policy on a branch","title":"DESCRIPTION"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyMergeStrategy @params This example creates a 'Require a merge strategy' policy with splatting parameters","title":"EXAMPLE 1"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#example-2","text":"'repo1', 'repo2' | Set-AzDoBranchPolicyMergeStrategy -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -PAT \"***\" This example creates a 'Require a merge strategy' policy on the main branch of repo1 and repo2","title":"EXAMPLE 2"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-reponame","text":"Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-branch","text":"Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False","title":"-Branch"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-allowsquash","text":"Allow squash merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : True Accept pipeline input : False Accept wildcard characters : False","title":"-AllowSquash"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-allownofastforward","text":"Allow no fast forward merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-AllowNoFastForward"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-allowrebase","text":"Allow rebase merge Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-AllowRebase"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-allowrebasemerge","text":"Allow rebase merge message Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-AllowRebaseMerge"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#collectionuri-collectionuri","text":"","title":"CollectionUri      = $CollectionUri"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#projectname-projectname","text":"","title":"ProjectName        = $ProjectName"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#reponame-reponame","text":"","title":"RepoName           = $RepoName"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#id-resid","text":"","title":"id                 = $res.id"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#allowsquash-ressettingsallowsquash","text":"","title":"allowSquash        = $res.settings.allowSquash"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#allownofastforward-ressettingsallownofastforward","text":"","title":"allowNoFastForward = $res.settings.allowNoFastForward"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#allowrebase-ressettingsallowrebase","text":"","title":"allowRebase        = $res.settings.allowRebase"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#allowrebasemerge-ressettingsallowrebasemerge","text":"","title":"allowRebaseMerge   = $res.settings.allowRebaseMerge"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#_1","text":"","title":"}"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoBranchPolicyMergeStrategy/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoBranchPolicyMinimalApproval/","text":"Set-AzDoBranchPolicyMinimalApproval # SYNOPSIS # Creates a Minimal approval policy on a branch SYNTAX # Set-AzDoBranchPolicyMinimalApproval [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-branch] <String>] [[-minimumApproverCount] <Int32>] [[-creatorVoteCounts] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Minimal approval policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyMinimalApproval @params This example creates a new Azure Pipeline using the PowerShell pipeline EXAMPLE 2 # 'repo1', 'repo2' | Set-AzDoBranchPolicyMinimalApproval -CollectionUri $CollectionUri -ProjectName $ProjectName -PAT \"***\" This example creates a 'Minimum number of reviewers' policy on the main branch of repo1 and repo2 PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -RepoName # Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -branch # Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False -minimumApproverCount # Block pull requests until the comments are resolved Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : 2 Accept pipeline input : False Accept wildcard characters : False -creatorVoteCounts # Block self approval Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : True Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # id = $res.id # minimumApproverCount = $res.settings.minimumApproverCount # creatorVoteCounts = $res.settings.creatorVoteCounts # allowDownvotes = $res.settings.allowDownvotes # resetOnSourcePush = $res.settings.resetOnSourcePush # requireVoteOnLastIteration = $res.settings.requireVoteOnLastIteration # resetRejectionsOnSourcePush = $res.settings.resetRejectionsOnSourcePush # blockLastPusherVote = $res.settings.blockLastPusherVote # requireVoteOnEachIteration = $res.settings.requireVoteOnEachIteration # } # NOTES # RELATED LINKS #","title":"Set-AzDoBranchPolicyMinimalApproval"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#set-azdobranchpolicyminimalapproval","text":"","title":"Set-AzDoBranchPolicyMinimalApproval"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#synopsis","text":"Creates a Minimal approval policy on a branch","title":"SYNOPSIS"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#syntax","text":"Set-AzDoBranchPolicyMinimalApproval [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [-RepoName] <String> [[-branch] <String>] [[-minimumApproverCount] <Int32>] [[-creatorVoteCounts] <Boolean>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#description","text":"Creates a Minimal approval policy on a branch","title":"DESCRIPTION"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" } Set-AzDoBranchPolicyMinimalApproval @params This example creates a new Azure Pipeline using the PowerShell pipeline","title":"EXAMPLE 1"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#example-2","text":"'repo1', 'repo2' | Set-AzDoBranchPolicyMinimalApproval -CollectionUri $CollectionUri -ProjectName $ProjectName -PAT \"***\" This example creates a 'Minimum number of reviewers' policy on the main branch of repo1 and repo2","title":"EXAMPLE 2"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-reponame","text":"Name of the Repository containing the YAML-sourcecode Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-RepoName"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-branch","text":"Branch to create the policy on Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : Main Accept pipeline input : False Accept wildcard characters : False","title":"-branch"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-minimumapprovercount","text":"Block pull requests until the comments are resolved Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : 2 Accept pipeline input : False Accept wildcard characters : False","title":"-minimumApproverCount"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-creatorvotecounts","text":"Block self approval Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : True Accept pipeline input : False Accept wildcard characters : False","title":"-creatorVoteCounts"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#collectionuri-collectionuri","text":"","title":"CollectionUri               = $CollectionUri"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#projectname-projectname","text":"","title":"ProjectName                 = $ProjectName"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#reponame-reponame","text":"","title":"RepoName                    = $RepoName"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#id-resid","text":"","title":"id                          = $res.id"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#minimumapprovercount-ressettingsminimumapprovercount","text":"","title":"minimumApproverCount        = $res.settings.minimumApproverCount"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#creatorvotecounts-ressettingscreatorvotecounts","text":"","title":"creatorVoteCounts           = $res.settings.creatorVoteCounts"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#allowdownvotes-ressettingsallowdownvotes","text":"","title":"allowDownvotes              = $res.settings.allowDownvotes"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#resetonsourcepush-ressettingsresetonsourcepush","text":"","title":"resetOnSourcePush           = $res.settings.resetOnSourcePush"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#requirevoteonlastiteration-ressettingsrequirevoteonlastiteration","text":"","title":"requireVoteOnLastIteration  = $res.settings.requireVoteOnLastIteration"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#resetrejectionsonsourcepush-ressettingsresetrejectionsonsourcepush","text":"","title":"resetRejectionsOnSourcePush = $res.settings.resetRejectionsOnSourcePush"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#blocklastpushervote-ressettingsblocklastpushervote","text":"","title":"blockLastPusherVote         = $res.settings.blockLastPusherVote"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#requirevoteoneachiteration-ressettingsrequirevoteoneachiteration","text":"","title":"requireVoteOnEachIteration  = $res.settings.requireVoteOnEachIteration"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#_1","text":"","title":"}"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoBranchPolicyMinimalApproval/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoPipelineBranchControl/","text":"Set-AzDoPipelineBranchControl # SYNOPSIS # Creates a Build Validation policy on a branch SYNTAX # Set-AzDoPipelineBranchControl [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [-ResourceType] <String> [-ResourceName] <String> [[-AllowUnknownStatusBranches] <String>] [[-AllowedBranches] <String>] [[-EnsureProtectionOfBranch] <String>] [[-Timeout] <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Creates a Build Validation policy on a branch EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters EXAMPLE 2 # $env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch PARAMETERS # -CollectionUri # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -ProjectName # Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -Name # Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : Branch Control Accept pipeline input : False Accept wildcard characters : False -ResourceType # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -ResourceName # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : True Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -AllowUnknownStatusBranches # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False -AllowedBranches # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : Refs/head/main Accept pipeline input : False Accept wildcard characters : False -EnsureProtectionOfBranch # Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : True Accept pipeline input : False Accept wildcard characters : False -Timeout # Valid duration of the Build Validation policy. Default is 720 minutes Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 10 Default value : 1440 Accept pipeline input : False Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # [PSCustomObject]@{ # CollectionUri = $CollectionUri # ProjectName = $ProjectName # RepoName = $RepoName # Id = $result.id # Url = $result.url # } # NOTES # RELATED LINKS #","title":"Set-AzDoPipelineBranchControl"},{"location":"Set-AzDoPipelineBranchControl/#set-azdopipelinebranchcontrol","text":"","title":"Set-AzDoPipelineBranchControl"},{"location":"Set-AzDoPipelineBranchControl/#synopsis","text":"Creates a Build Validation policy on a branch","title":"SYNOPSIS"},{"location":"Set-AzDoPipelineBranchControl/#syntax","text":"Set-AzDoPipelineBranchControl [-CollectionUri] <String> [-ProjectName] <String> [[-PAT] <String>] [[-Name] <String>] [-ResourceType] <String> [-ResourceName] <String> [[-AllowUnknownStatusBranches] <String>] [[-AllowedBranches] <String>] [[-EnsureProtectionOfBranch] <String>] [[-Timeout] <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoPipelineBranchControl/#description","text":"Creates a Build Validation policy on a branch","title":"DESCRIPTION"},{"location":"Set-AzDoPipelineBranchControl/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoPipelineBranchControl/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" Name = \"Policy 1\" RepoName = \"Repo 1\" ProjectName = \"Project 1\" Id = 1 } Set-AzDoBranchPolicyBuildValidation @params This example creates a policy with splatting parameters","title":"EXAMPLE 1"},{"location":"Set-AzDoPipelineBranchControl/#example-2","text":"$env:SYSTEM_ACCESSTOKEN = '***' New-AzDoPipeline -CollectionUri \"https://dev.azure.com/contoso\" -ProjectName \"Project 1\" -Name \"Pipeline 1\" -RepoName \"Repo 1\" -Path \"main.yml\" | Set-AzDoBranchPolicyBuildValidation This example creates a new Azure Pipeline and sets this pipeline as Build Validation policy on the main branch","title":"EXAMPLE 2"},{"location":"Set-AzDoPipelineBranchControl/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoPipelineBranchControl/#-collectionuri","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoPipelineBranchControl/#-projectname","text":"Project where the pipeline will be created. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoPipelineBranchControl/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoPipelineBranchControl/#-name","text":"Name of the Build Validation policy. Default is the name of the Build Definition Type : String Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : Branch Control Accept pipeline input : False Accept wildcard characters : False","title":"-Name"},{"location":"Set-AzDoPipelineBranchControl/#-resourcetype","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : True Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ResourceType"},{"location":"Set-AzDoPipelineBranchControl/#-resourcename","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : True Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ResourceName"},{"location":"Set-AzDoPipelineBranchControl/#-allowunknownstatusbranches","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-AllowUnknownStatusBranches"},{"location":"Set-AzDoPipelineBranchControl/#-allowedbranches","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : Refs/head/main Accept pipeline input : False Accept wildcard characters : False","title":"-AllowedBranches"},{"location":"Set-AzDoPipelineBranchControl/#-ensureprotectionofbranch","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : String Parameter Sets : (All) Aliases : Required : False Position : 9 Default value : True Accept pipeline input : False Accept wildcard characters : False","title":"-EnsureProtectionOfBranch"},{"location":"Set-AzDoPipelineBranchControl/#-timeout","text":"Valid duration of the Build Validation policy. Default is 720 minutes Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : 10 Default value : 1440 Accept pipeline input : False Accept wildcard characters : False","title":"-Timeout"},{"location":"Set-AzDoPipelineBranchControl/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoPipelineBranchControl/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoPipelineBranchControl/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoPipelineBranchControl/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoPipelineBranchControl/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoPipelineBranchControl/#pscustomobject","text":"","title":"[PSCustomObject]@{"},{"location":"Set-AzDoPipelineBranchControl/#collectionuri-collectionuri","text":"","title":"CollectionUri = $CollectionUri"},{"location":"Set-AzDoPipelineBranchControl/#projectname-projectname","text":"","title":"ProjectName   = $ProjectName"},{"location":"Set-AzDoPipelineBranchControl/#reponame-reponame","text":"","title":"RepoName      = $RepoName"},{"location":"Set-AzDoPipelineBranchControl/#id-resultid","text":"","title":"Id            = $result.id"},{"location":"Set-AzDoPipelineBranchControl/#url-resulturl","text":"","title":"Url           = $result.url"},{"location":"Set-AzDoPipelineBranchControl/#_1","text":"","title":"}"},{"location":"Set-AzDoPipelineBranchControl/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoPipelineBranchControl/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoProjectSetting/","text":"Set-AzDoProjectSetting # SYNOPSIS # Sets the project settings for the given project. SYNTAX # Set-AzDoProjectSetting [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-BuildsEnabledForForks] [-DisableClassicBuildPipelineCreation] [-DisableClassicPipelineCreation] [-DisableClassicReleasePipelineCreation] [-DisableImpliedYAMLCiTrigger] [-EnableShellTasksArgsSanitizing] [-EnableShellTasksArgsSanitizingAudit] [-EnforceJobAuthScope] [-EnforceJobAuthScopeForForks] [-EnforceJobAuthScopeForReleases] [-EnforceNoAccessToSecretsFromForks] [-EnforceReferencedRepoScopedToken] [-EnforceSettableVar] [-ForkProtectionEnabled] [-IsCommentRequiredForPullRequest] [-PublishPipelineMetadata] [-RequireCommentsForNonTeamMemberAndNonContributors] [-RequireCommentsForNonTeamMembersOnly] [-StatusBadgesArePrivate] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Sets the project settings for the given project. EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project01\" EnforceJobAuthScope = $true EnforceJobAuthScopeForReleases = $true EnforceReferencedRepoScopedToken = $true EnforceSettableVar = $true PublishPipelineMetadata = $true StatusBadgesArePrivate = $true } Set-AzDOProjectSettings This example sets all the settings available to true. PARAMETERS # -CollectionUri # Collection uri of the organization. Can be set with the predefined variable from Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -PAT # PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Name of the project Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -BuildsEnabledForForks # If enabled, enables forked repositories to build pull requests. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DisableClassicBuildPipelineCreation # If enabled, disables classic build pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DisableClassicPipelineCreation # If enabled, disables classic pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DisableClassicReleasePipelineCreation # If enabled, disables classic release pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DisableImpliedYAMLCiTrigger # If enabled, disables implied pipeline CI triggers if the trigger section in YAML is missing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnableShellTasksArgsSanitizing # Enable shell tasks args sanitizing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnableShellTasksArgsSanitizingAudit # Enable shell tasks args sanitizing preview. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceJobAuthScope # Limit job authorization scope to current project for for all non-release pipelines reduces to the current project. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceJobAuthScopeForForks # Limit job authorization scope to current project for builds of forked repositories. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceJobAuthScopeForReleases # Limit job authorization scope to current project for release pipelines. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceNoAccessToSecretsFromForks # Enforce no access to secrets for builds of forked repositories. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceReferencedRepoScopedToken # Restricts the scope of access for all pipelines to only repositories explicitly referenced by the pipeline. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -EnforceSettableVar # If enabled, only those variables that are explicitly marked as \"Settable at queue time\" can be set at queue time. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ForkProtectionEnabled # Enable settings that enforce certain levels of protection for building pull requests from forks globally. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -IsCommentRequiredForPullRequest # Make comments required to have builds in all pull requests. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PublishPipelineMetadata # Allows pipelines to record metadata. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -RequireCommentsForNonTeamMemberAndNonContributors # Make comments required to have builds in pull requests from non-team members and non-contributors. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -RequireCommentsForNonTeamMembersOnly # Make comments required to have builds in pull requests from non-team members and non-contributors. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -StatusBadgesArePrivate # Anonymous users can access the status badge API for all pipelines unless this option is enabled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # PSobject # NOTES # RELATED LINKS #","title":"Set-AzDoProjectSetting"},{"location":"Set-AzDoProjectSetting/#set-azdoprojectsetting","text":"","title":"Set-AzDoProjectSetting"},{"location":"Set-AzDoProjectSetting/#synopsis","text":"Sets the project settings for the given project.","title":"SYNOPSIS"},{"location":"Set-AzDoProjectSetting/#syntax","text":"Set-AzDoProjectSetting [-CollectionUri] <String> [[-PAT] <String>] [-ProjectName] <String> [-BuildsEnabledForForks] [-DisableClassicBuildPipelineCreation] [-DisableClassicPipelineCreation] [-DisableClassicReleasePipelineCreation] [-DisableImpliedYAMLCiTrigger] [-EnableShellTasksArgsSanitizing] [-EnableShellTasksArgsSanitizingAudit] [-EnforceJobAuthScope] [-EnforceJobAuthScopeForForks] [-EnforceJobAuthScopeForReleases] [-EnforceNoAccessToSecretsFromForks] [-EnforceReferencedRepoScopedToken] [-EnforceSettableVar] [-ForkProtectionEnabled] [-IsCommentRequiredForPullRequest] [-PublishPipelineMetadata] [-RequireCommentsForNonTeamMemberAndNonContributors] [-RequireCommentsForNonTeamMembersOnly] [-StatusBadgesArePrivate] [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoProjectSetting/#description","text":"Sets the project settings for the given project.","title":"DESCRIPTION"},{"location":"Set-AzDoProjectSetting/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoProjectSetting/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project01\" EnforceJobAuthScope = $true EnforceJobAuthScopeForReleases = $true EnforceReferencedRepoScopedToken = $true EnforceSettableVar = $true PublishPipelineMetadata = $true StatusBadgesArePrivate = $true } Set-AzDOProjectSettings This example sets all the settings available to true.","title":"EXAMPLE 1"},{"location":"Set-AzDoProjectSetting/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoProjectSetting/#-collectionuri","text":"Collection uri of the organization. Can be set with the predefined variable from Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Set-AzDoProjectSetting/#-pat","text":"PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoProjectSetting/#-projectname","text":"Name of the project Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoProjectSetting/#-buildsenabledforforks","text":"If enabled, enables forked repositories to build pull requests. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-BuildsEnabledForForks"},{"location":"Set-AzDoProjectSetting/#-disableclassicbuildpipelinecreation","text":"If enabled, disables classic build pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DisableClassicBuildPipelineCreation"},{"location":"Set-AzDoProjectSetting/#-disableclassicpipelinecreation","text":"If enabled, disables classic pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DisableClassicPipelineCreation"},{"location":"Set-AzDoProjectSetting/#-disableclassicreleasepipelinecreation","text":"If enabled, disables classic release pipelines creation. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DisableClassicReleasePipelineCreation"},{"location":"Set-AzDoProjectSetting/#-disableimpliedyamlcitrigger","text":"If enabled, disables implied pipeline CI triggers if the trigger section in YAML is missing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DisableImpliedYAMLCiTrigger"},{"location":"Set-AzDoProjectSetting/#-enableshelltasksargssanitizing","text":"Enable shell tasks args sanitizing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnableShellTasksArgsSanitizing"},{"location":"Set-AzDoProjectSetting/#-enableshelltasksargssanitizingaudit","text":"Enable shell tasks args sanitizing preview. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnableShellTasksArgsSanitizingAudit"},{"location":"Set-AzDoProjectSetting/#-enforcejobauthscope","text":"Limit job authorization scope to current project for for all non-release pipelines reduces to the current project. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceJobAuthScope"},{"location":"Set-AzDoProjectSetting/#-enforcejobauthscopeforforks","text":"Limit job authorization scope to current project for builds of forked repositories. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceJobAuthScopeForForks"},{"location":"Set-AzDoProjectSetting/#-enforcejobauthscopeforreleases","text":"Limit job authorization scope to current project for release pipelines. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceJobAuthScopeForReleases"},{"location":"Set-AzDoProjectSetting/#-enforcenoaccesstosecretsfromforks","text":"Enforce no access to secrets for builds of forked repositories. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceNoAccessToSecretsFromForks"},{"location":"Set-AzDoProjectSetting/#-enforcereferencedreposcopedtoken","text":"Restricts the scope of access for all pipelines to only repositories explicitly referenced by the pipeline. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceReferencedRepoScopedToken"},{"location":"Set-AzDoProjectSetting/#-enforcesettablevar","text":"If enabled, only those variables that are explicitly marked as \"Settable at queue time\" can be set at queue time. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-EnforceSettableVar"},{"location":"Set-AzDoProjectSetting/#-forkprotectionenabled","text":"Enable settings that enforce certain levels of protection for building pull requests from forks globally. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ForkProtectionEnabled"},{"location":"Set-AzDoProjectSetting/#-iscommentrequiredforpullrequest","text":"Make comments required to have builds in all pull requests. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-IsCommentRequiredForPullRequest"},{"location":"Set-AzDoProjectSetting/#-publishpipelinemetadata","text":"Allows pipelines to record metadata. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-PublishPipelineMetadata"},{"location":"Set-AzDoProjectSetting/#-requirecommentsfornonteammemberandnoncontributors","text":"Make comments required to have builds in pull requests from non-team members and non-contributors. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-RequireCommentsForNonTeamMemberAndNonContributors"},{"location":"Set-AzDoProjectSetting/#-requirecommentsfornonteammembersonly","text":"Make comments required to have builds in pull requests from non-team members and non-contributors. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-RequireCommentsForNonTeamMembersOnly"},{"location":"Set-AzDoProjectSetting/#-statusbadgesareprivate","text":"Anonymous users can access the status badge API for all pipelines unless this option is enabled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : True Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-StatusBadgesArePrivate"},{"location":"Set-AzDoProjectSetting/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoProjectSetting/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoProjectSetting/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoProjectSetting/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoProjectSetting/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoProjectSetting/#psobject","text":"","title":"PSobject"},{"location":"Set-AzDoProjectSetting/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoProjectSetting/#related-links","text":"","title":"RELATED LINKS"},{"location":"Set-AzDoTeamMember/","text":"Set-AzDoTeamMember # SYNOPSIS # Adds a Azure Group to a default team in an Azure DevOps project. SYNTAX # Set-AzDoTeamMember [-OrganizationName] <String> [[-PAT] <String>] [-ProjectName] <String> [-ObjectId] <String> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Adds a Azure Group to a default team in an Azure DevOps project. EXAMPLES # EXAMPLE 1 # New-AzDoVariableGroup -collectionuri 'https://dev.azure.com/weareinspark/' -PAT '*******************' -ProjectName 'BusinessReadyCloud' -Name 'test' -Variables @{ test = @{ value = 'test' } } -Description 'This is a test' To create a variable group 'test' with one variable PARAMETERS # -OrganizationName # Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -PAT # PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -ProjectName # Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ObjectId # Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # New-AzDoVariableGroup [-CollectionUri] [-PAT] [-ProjectName] [-Name] [-Variables] [[-Description] ] # [ ] # OUTPUTS # New variable group with at least 1 variable in a given project. # NOTES # RELATED LINKS #","title":"Set-AzDoTeamMember"},{"location":"Set-AzDoTeamMember/#set-azdoteammember","text":"","title":"Set-AzDoTeamMember"},{"location":"Set-AzDoTeamMember/#synopsis","text":"Adds a Azure Group to a default team in an Azure DevOps project.","title":"SYNOPSIS"},{"location":"Set-AzDoTeamMember/#syntax","text":"Set-AzDoTeamMember [-OrganizationName] <String> [[-PAT] <String>] [-ProjectName] <String> [-ObjectId] <String> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Set-AzDoTeamMember/#description","text":"Adds a Azure Group to a default team in an Azure DevOps project.","title":"DESCRIPTION"},{"location":"Set-AzDoTeamMember/#examples","text":"","title":"EXAMPLES"},{"location":"Set-AzDoTeamMember/#example-1","text":"New-AzDoVariableGroup -collectionuri 'https://dev.azure.com/weareinspark/' -PAT '*******************' -ProjectName 'BusinessReadyCloud' -Name 'test' -Variables @{ test = @{ value = 'test' } } -Description 'This is a test' To create a variable group 'test' with one variable","title":"EXAMPLE 1"},{"location":"Set-AzDoTeamMember/#parameters","text":"","title":"PARAMETERS"},{"location":"Set-AzDoTeamMember/#-organizationname","text":"Collection Uri of the organization Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-OrganizationName"},{"location":"Set-AzDoTeamMember/#-pat","text":"PAT to authentice with the organization Type : String Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Set-AzDoTeamMember/#-projectname","text":"Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProjectName"},{"location":"Set-AzDoTeamMember/#-objectid","text":"Project where the variable group has to be created Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ObjectId"},{"location":"Set-AzDoTeamMember/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Set-AzDoTeamMember/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Set-AzDoTeamMember/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-AzDoTeamMember/#inputs","text":"","title":"INPUTS"},{"location":"Set-AzDoTeamMember/#new-azdovariablegroup-collectionuri-pat-projectname-name-variables-description","text":"","title":"New-AzDoVariableGroup [-CollectionUri]  [-PAT]  [-ProjectName]  [-Name]  [-Variables]  [[-Description] ]"},{"location":"Set-AzDoTeamMember/#_1","text":"","title":"[]"},{"location":"Set-AzDoTeamMember/#outputs","text":"","title":"OUTPUTS"},{"location":"Set-AzDoTeamMember/#new-variable-group-with-at-least-1-variable-in-a-given-project","text":"","title":"New variable group with at least 1 variable in a given project."},{"location":"Set-AzDoTeamMember/#notes","text":"","title":"NOTES"},{"location":"Set-AzDoTeamMember/#related-links","text":"","title":"RELATED LINKS"},{"location":"Test-AzDoServiceConnection/","text":"Test-AzDoServiceConnection # SYNOPSIS # Function to create a service connection in Azure DevOps SYNTAX # Test-AzDoServiceConnection [-ProjectName] <String> [-CollectionUri] <String> [[-PAT] <String>] [-ServiceConnectionName] <String> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION # Function to create a service connection in Azure DevOps EXAMPLES # EXAMPLE 1 # $params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" SubscriptionId = \"00000-00000-00000-00000-00000\" SubscriptionName = \"Subscription 1\" Tenantid = \"11111-11111-11111-11111-11111\" Serviceprincipalid = \"1c03163f-7e4e-4fab-8b41-6f040a8361b9\" KeyVaultName = \"kv01\" CertName = \"Cert01\" AuthenticationType = \"spnCertificate\" ProjectID = \"1f31cb4d-5a69-419f-86f0-ee3a8ed9ced2\" Name = \"Project 1\" } Test-AzDoServiceConnection @params This example creates a new Azure DevOps service connection with a Certificate from a KeyVault in Azure. PARAMETERS # -ProjectName # Name of the Project in Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -CollectionUri # Collection Uri. e.g. https://dev.azure.com/contoso. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -PAT # PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ServiceConnectionName # Collection Uri. e.g. https://dev.azure.com/contoso. Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -WhatIf # Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm # Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters # This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . INPUTS # OUTPUTS # NOTES # RELATED LINKS #","title":"Test-AzDoServiceConnection"},{"location":"Test-AzDoServiceConnection/#test-azdoserviceconnection","text":"","title":"Test-AzDoServiceConnection"},{"location":"Test-AzDoServiceConnection/#synopsis","text":"Function to create a service connection in Azure DevOps","title":"SYNOPSIS"},{"location":"Test-AzDoServiceConnection/#syntax","text":"Test-AzDoServiceConnection [-ProjectName] <String> [-CollectionUri] <String> [[-PAT] <String>] [-ServiceConnectionName] <String> [-WhatIf] [-Confirm] [<CommonParameters>]","title":"SYNTAX"},{"location":"Test-AzDoServiceConnection/#description","text":"Function to create a service connection in Azure DevOps","title":"DESCRIPTION"},{"location":"Test-AzDoServiceConnection/#examples","text":"","title":"EXAMPLES"},{"location":"Test-AzDoServiceConnection/#example-1","text":"$params = @{ CollectionUri = \"https://dev.azure.com/contoso\" PAT = \"***\" ProjectName = \"Project 1\" SubscriptionId = \"00000-00000-00000-00000-00000\" SubscriptionName = \"Subscription 1\" Tenantid = \"11111-11111-11111-11111-11111\" Serviceprincipalid = \"1c03163f-7e4e-4fab-8b41-6f040a8361b9\" KeyVaultName = \"kv01\" CertName = \"Cert01\" AuthenticationType = \"spnCertificate\" ProjectID = \"1f31cb4d-5a69-419f-86f0-ee3a8ed9ced2\" Name = \"Project 1\" } Test-AzDoServiceConnection @params This example creates a new Azure DevOps service connection with a Certificate from a KeyVault in Azure.","title":"EXAMPLE 1"},{"location":"Test-AzDoServiceConnection/#parameters","text":"","title":"PARAMETERS"},{"location":"Test-AzDoServiceConnection/#-projectname","text":"Name of the Project in Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProjectName"},{"location":"Test-AzDoServiceConnection/#-collectionuri","text":"Collection Uri. e.g. https://dev.azure.com/contoso. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-CollectionUri"},{"location":"Test-AzDoServiceConnection/#-pat","text":"PAT to get access to Azure DevOps. Type : String Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-PAT"},{"location":"Test-AzDoServiceConnection/#-serviceconnectionname","text":"Collection Uri. e.g. https://dev.azure.com/contoso. Type : String Parameter Sets : (All) Aliases : Required : True Position : 4 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ServiceConnectionName"},{"location":"Test-AzDoServiceConnection/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Test-AzDoServiceConnection/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Test-AzDoServiceConnection/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Test-AzDoServiceConnection/#inputs","text":"","title":"INPUTS"},{"location":"Test-AzDoServiceConnection/#outputs","text":"","title":"OUTPUTS"},{"location":"Test-AzDoServiceConnection/#notes","text":"","title":"NOTES"},{"location":"Test-AzDoServiceConnection/#related-links","text":"","title":"RELATED LINKS"},{"location":"about_InstallingModule/","text":"Installing module # In this document we will describe how to register the PowerShell repository located at InSpark. We use Powershell Secret Management with a local stored secret vault. This implementation has 1 downside, you will need to enter your password (One that you will create is this guide) every time you start PowerShell. Requirements # PAT with Packaging (Read Access) to weareinspark organization \u26a0\ufe0f WARNING Contain the permission of the PAT to (Packaging (Read Access)), since it's going to be exposed to the environment vars. Set-up authentication with PAT # Install the required modules # This module handles fetching secrets Install-Module -Name Microsoft . PowerShell . SecretManagement -Scope CurrentUser -Repository PSGallery -Force # This module stores the secrets safely on your machine Install-Module -Name Microsoft . PowerShell . SecretStore -Scope CurrentUser -Repository PSGallery -Force Set the secret Set-Secret -Name Pat -Secret \"<PERSONAL_ACCESS_TOKEN>\" Enter a password for own use. Open your profile code $PROFILE Save the following code in your profile # This prepares authentication with the nuget packagefeed $env:VSS_NUGET_EXTERNAL_FEED_ENDPOINTS = @{ endpointCredentials = @( @{ endpoint = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" username = \"<REPLACE ME>\" # Replace with your e-mail (User Principal Name) password = ( Get-Secret -Name Pat -AsPlainText ) } ) } | ConvertTo-Json # This creates a persistant PSCredential so you can easily install modules from the repository $InSparkAzureDevopsArtifacts = New-Object System . Management . Automation . PSCredential ( \"<REPLACE ME>\" , ( Get-Secret -Name Pat )) # Replace with your e-mail (User Principal Name) Install Azure Artifact Credential Provider # Follow the steps to install the Azure Artifact Credential Provider Set-up the Powershell Repository # Restart PowerShell session Register the Repository $registerPSRepositorySplat = @{ Name = \"InSpark\" SourceLocation = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" PublishLocation = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" InstallationPolicy = 'Trusted' Credential = $InSparkAzureDevopsArtifacts } Register-PSRepository @registerPSRepositorySplat Validate that the setup succeeded Find-Module -Repository InSpark Install the module () Install-Module -Name InSpark . InfrastructureAsCode -Scope CurrentUser -Repository InSpark -Credential $InSparkAzureDevopsArtifacts Troubleshooting # Query Url ... is invalid # Issue In some cases PowerShell returns errors during Find-Module or Install-Module . PowerShell will return errors like: Find-Module -Repository InSpark WARNING : Query Url https :// pkgs . dev . azure . com / weareinspark / _packaging / PowerShell / nuget / v2 is invalid . PowerShell sometimes registers a NuGet Provider as a PackageSource when registering a PSRepository instead of just the PowerShellGet entry. You can check this by performing: Get-PackageSource Name ProviderName IsTrusted Location ---- ------------ --------- -------- PSGallery PowerShellGet True https :// www . powershellgallery . com / api / v2 InSpark PowerShellGet True https :// pkgs . dev . azure . com / weareinspark / _packaging / powershell / nuget / v2 InSpark NuGet True https :// pkgs . dev . azure . com / weareinspark / _packaging / powershell / nuget / v2 Fix You can remove the NuGet PackageSource with: Unregister-PackageSource -Name InSpark -ProviderName NuGet Make sure to validate that functionality is restored: Find-Module -Repository InSpark Reference # https://devblogs.microsoft.com/powershell-community/how-to-use-the-secret-modules/ https://docs.microsoft.com/en-us/azure/devops/artifacts/tutorials/private-powershell-library?view=azure-devops https://github.com/microsoft/artifacts-credprovider","title":"Installing module"},{"location":"about_InstallingModule/#installing-module","text":"In this document we will describe how to register the PowerShell repository located at InSpark. We use Powershell Secret Management with a local stored secret vault. This implementation has 1 downside, you will need to enter your password (One that you will create is this guide) every time you start PowerShell.","title":"Installing module"},{"location":"about_InstallingModule/#requirements","text":"PAT with Packaging (Read Access) to weareinspark organization \u26a0\ufe0f WARNING Contain the permission of the PAT to (Packaging (Read Access)), since it's going to be exposed to the environment vars.","title":"Requirements"},{"location":"about_InstallingModule/#set-up-authentication-with-pat","text":"Install the required modules # This module handles fetching secrets Install-Module -Name Microsoft . PowerShell . SecretManagement -Scope CurrentUser -Repository PSGallery -Force # This module stores the secrets safely on your machine Install-Module -Name Microsoft . PowerShell . SecretStore -Scope CurrentUser -Repository PSGallery -Force Set the secret Set-Secret -Name Pat -Secret \"<PERSONAL_ACCESS_TOKEN>\" Enter a password for own use. Open your profile code $PROFILE Save the following code in your profile # This prepares authentication with the nuget packagefeed $env:VSS_NUGET_EXTERNAL_FEED_ENDPOINTS = @{ endpointCredentials = @( @{ endpoint = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" username = \"<REPLACE ME>\" # Replace with your e-mail (User Principal Name) password = ( Get-Secret -Name Pat -AsPlainText ) } ) } | ConvertTo-Json # This creates a persistant PSCredential so you can easily install modules from the repository $InSparkAzureDevopsArtifacts = New-Object System . Management . Automation . PSCredential ( \"<REPLACE ME>\" , ( Get-Secret -Name Pat )) # Replace with your e-mail (User Principal Name)","title":"Set-up authentication with PAT"},{"location":"about_InstallingModule/#install-azure-artifact-credential-provider","text":"Follow the steps to install the Azure Artifact Credential Provider","title":"Install Azure Artifact Credential Provider"},{"location":"about_InstallingModule/#set-up-the-powershell-repository","text":"Restart PowerShell session Register the Repository $registerPSRepositorySplat = @{ Name = \"InSpark\" SourceLocation = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" PublishLocation = \"https://pkgs.dev.azure.com/weareinspark/_packaging/powershell/nuget/v2\" InstallationPolicy = 'Trusted' Credential = $InSparkAzureDevopsArtifacts } Register-PSRepository @registerPSRepositorySplat Validate that the setup succeeded Find-Module -Repository InSpark Install the module () Install-Module -Name InSpark . InfrastructureAsCode -Scope CurrentUser -Repository InSpark -Credential $InSparkAzureDevopsArtifacts","title":"Set-up the Powershell Repository"},{"location":"about_InstallingModule/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"about_InstallingModule/#query-url-is-invalid","text":"Issue In some cases PowerShell returns errors during Find-Module or Install-Module . PowerShell will return errors like: Find-Module -Repository InSpark WARNING : Query Url https :// pkgs . dev . azure . com / weareinspark / _packaging / PowerShell / nuget / v2 is invalid . PowerShell sometimes registers a NuGet Provider as a PackageSource when registering a PSRepository instead of just the PowerShellGet entry. You can check this by performing: Get-PackageSource Name ProviderName IsTrusted Location ---- ------------ --------- -------- PSGallery PowerShellGet True https :// www . powershellgallery . com / api / v2 InSpark PowerShellGet True https :// pkgs . dev . azure . com / weareinspark / _packaging / powershell / nuget / v2 InSpark NuGet True https :// pkgs . dev . azure . com / weareinspark / _packaging / powershell / nuget / v2 Fix You can remove the NuGet PackageSource with: Unregister-PackageSource -Name InSpark -ProviderName NuGet Make sure to validate that functionality is restored: Find-Module -Repository InSpark","title":"Query Url ... is invalid"},{"location":"about_InstallingModule/#reference","text":"https://devblogs.microsoft.com/powershell-community/how-to-use-the-secret-modules/ https://docs.microsoft.com/en-us/azure/devops/artifacts/tutorials/private-powershell-library?view=azure-devops https://github.com/microsoft/artifacts-credprovider","title":"Reference"},{"location":"about_workflow/","text":"Workflow # In this document we describe how our test and release workflows work. The test workflow starts when a pull request opens and the release workflow starts when there is a commit on the main branch with a change in the folder InSpark.InfrastructureAsCode. Pull request labels # When a pull request opens the test workflow will start to set labels based on the head branch. You can find the labels in the file pr-labeler.yml . The labels are used in other actions to determine the version or changes. The workflow will check if one of these labels are set and will then be added as a reviewer. You can also choose to set the labels manually if you are not on the right branch. Reference: Github - TimonVS - pr-labeler-action Github - NathanielHill - check-pr-label-action Unit testing # Before merging the PR, PSake will test the module with Pester and PSScriptAnalyzer. The tests will be performed on different operating systems (Windows, Linux, Mac OS). The Pester tests are located in tests/ and the PSScriptAnalyzer settings can be found in ScriptAnalyzerSettings.psd1 . Reference: Github - PowerShellBuild Search for previous tags # When the labels are present and the unit tests complete whithout any errors, the pull request will be merged into the main branch and the release workflow will start. The first action that takes place is the search for previous tags. This is required to determine the new version of the module. When no tags are found, the version 0.0.0 will be given. Reference: github-action-get-previous-tag Calculating the new version # All our versions are SemVer based and are calculated based on the labels that are set in the pull request. Examples: patch: 0.0.0 -> 0.0.1 minor: 0.0.0 -> 0.1.0 major: 0.0.0 -> 1.0.0 Updating the manifest # The manifest InSpark.InfrastructureAsCode.psd1 will be updated with the following information: New version Release notes (The name of the pull request) The Project URL (The Github repo URL) Create a github release # After a new commit on the main branch, there will be GitHub release created based on a template that can be found in release.yml . The template will look for all pull request between the two (previous and current) versions based on SemVer and add the pull request title and link to different sections. Because this workflow runs after every pull request there will always be one pull request linked in the github release. Reference: Github - Automatically generated release notes Publishing the module # When the manifest is updated the module is ready to be published. We use PSake to publish the module as well. We first make sure that the PowerShell repository is registered. For this reason we switched to a Windows runner, because the CmdLet Register-PSRepository does not work on a Linux runner. After this we will PSake publish the module to the repository. This will only work if the version is higher then the latest available version. Reference: Github - PowerShellBuild Azure DevOps - Use an Azure Artifacts feed as a private PowerShell repository","title":"Workflow"},{"location":"about_workflow/#workflow","text":"In this document we describe how our test and release workflows work. The test workflow starts when a pull request opens and the release workflow starts when there is a commit on the main branch with a change in the folder InSpark.InfrastructureAsCode.","title":"Workflow"},{"location":"about_workflow/#pull-request-labels","text":"When a pull request opens the test workflow will start to set labels based on the head branch. You can find the labels in the file pr-labeler.yml . The labels are used in other actions to determine the version or changes. The workflow will check if one of these labels are set and will then be added as a reviewer. You can also choose to set the labels manually if you are not on the right branch. Reference: Github - TimonVS - pr-labeler-action Github - NathanielHill - check-pr-label-action","title":"Pull request labels"},{"location":"about_workflow/#unit-testing","text":"Before merging the PR, PSake will test the module with Pester and PSScriptAnalyzer. The tests will be performed on different operating systems (Windows, Linux, Mac OS). The Pester tests are located in tests/ and the PSScriptAnalyzer settings can be found in ScriptAnalyzerSettings.psd1 . Reference: Github - PowerShellBuild","title":"Unit testing"},{"location":"about_workflow/#search-for-previous-tags","text":"When the labels are present and the unit tests complete whithout any errors, the pull request will be merged into the main branch and the release workflow will start. The first action that takes place is the search for previous tags. This is required to determine the new version of the module. When no tags are found, the version 0.0.0 will be given. Reference: github-action-get-previous-tag","title":"Search for previous tags"},{"location":"about_workflow/#calculating-the-new-version","text":"All our versions are SemVer based and are calculated based on the labels that are set in the pull request. Examples: patch: 0.0.0 -> 0.0.1 minor: 0.0.0 -> 0.1.0 major: 0.0.0 -> 1.0.0","title":"Calculating the new version"},{"location":"about_workflow/#updating-the-manifest","text":"The manifest InSpark.InfrastructureAsCode.psd1 will be updated with the following information: New version Release notes (The name of the pull request) The Project URL (The Github repo URL)","title":"Updating the manifest"},{"location":"about_workflow/#create-a-github-release","text":"After a new commit on the main branch, there will be GitHub release created based on a template that can be found in release.yml . The template will look for all pull request between the two (previous and current) versions based on SemVer and add the pull request title and link to different sections. Because this workflow runs after every pull request there will always be one pull request linked in the github release. Reference: Github - Automatically generated release notes","title":"Create a github release"},{"location":"about_workflow/#publishing-the-module","text":"When the manifest is updated the module is ready to be published. We use PSake to publish the module as well. We first make sure that the PowerShell repository is registered. For this reason we switched to a Windows runner, because the CmdLet Register-PSRepository does not work on a Linux runner. After this we will PSake publish the module to the repository. This will only work if the version is higher then the latest available version. Reference: Github - PowerShellBuild Azure DevOps - Use an Azure Artifacts feed as a private PowerShell repository","title":"Publishing the module"}]}